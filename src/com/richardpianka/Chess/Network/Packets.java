// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/richardpianka/Chess/Network/packets.proto

package com.richardpianka.Chess.Network;

public final class Packets {
  private Packets() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SuccessOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string Message = 1;
    boolean hasMessage();
    String getMessage();
  }
  public static final class Success extends
      com.google.protobuf.GeneratedMessage
      implements SuccessOrBuilder {
    // Use Success.newBuilder() to construct.
    private Success(Builder builder) {
      super(builder);
    }
    private Success(boolean noInit) {}
    
    private static final Success defaultInstance;
    public static Success getDefaultInstance() {
      return defaultInstance;
    }
    
    public Success getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Success_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Success_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string Message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Success parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.richardpianka.Chess.Network.Packets.Success prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.richardpianka.Chess.Network.Packets.SuccessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Success_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Success_fieldAccessorTable;
      }
      
      // Construct using com.richardpianka.Chess.Network.Packets.Success.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.richardpianka.Chess.Network.Packets.Success.getDescriptor();
      }
      
      public com.richardpianka.Chess.Network.Packets.Success getDefaultInstanceForType() {
        return com.richardpianka.Chess.Network.Packets.Success.getDefaultInstance();
      }
      
      public com.richardpianka.Chess.Network.Packets.Success build() {
        com.richardpianka.Chess.Network.Packets.Success result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.richardpianka.Chess.Network.Packets.Success buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.richardpianka.Chess.Network.Packets.Success result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.richardpianka.Chess.Network.Packets.Success buildPartial() {
        com.richardpianka.Chess.Network.Packets.Success result = new com.richardpianka.Chess.Network.Packets.Success(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.richardpianka.Chess.Network.Packets.Success) {
          return mergeFrom((com.richardpianka.Chess.Network.Packets.Success)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.richardpianka.Chess.Network.Packets.Success other) {
        if (other == com.richardpianka.Chess.Network.Packets.Success.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string Message = 1;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.richardpianka.Chess.Network.Success)
    }
    
    static {
      defaultInstance = new Success(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.richardpianka.Chess.Network.Success)
  }
  
  public interface ErrorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string Message = 1;
    boolean hasMessage();
    String getMessage();
  }
  public static final class Error extends
      com.google.protobuf.GeneratedMessage
      implements ErrorOrBuilder {
    // Use Error.newBuilder() to construct.
    private Error(Builder builder) {
      super(builder);
    }
    private Error(boolean noInit) {}
    
    private static final Error defaultInstance;
    public static Error getDefaultInstance() {
      return defaultInstance;
    }
    
    public Error getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Error_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Error_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string Message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.richardpianka.Chess.Network.Packets.Error prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.richardpianka.Chess.Network.Packets.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Error_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Error_fieldAccessorTable;
      }
      
      // Construct using com.richardpianka.Chess.Network.Packets.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.richardpianka.Chess.Network.Packets.Error.getDescriptor();
      }
      
      public com.richardpianka.Chess.Network.Packets.Error getDefaultInstanceForType() {
        return com.richardpianka.Chess.Network.Packets.Error.getDefaultInstance();
      }
      
      public com.richardpianka.Chess.Network.Packets.Error build() {
        com.richardpianka.Chess.Network.Packets.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.richardpianka.Chess.Network.Packets.Error buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.richardpianka.Chess.Network.Packets.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.richardpianka.Chess.Network.Packets.Error buildPartial() {
        com.richardpianka.Chess.Network.Packets.Error result = new com.richardpianka.Chess.Network.Packets.Error(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.richardpianka.Chess.Network.Packets.Error) {
          return mergeFrom((com.richardpianka.Chess.Network.Packets.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.richardpianka.Chess.Network.Packets.Error other) {
        if (other == com.richardpianka.Chess.Network.Packets.Error.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string Message = 1;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.richardpianka.Chess.Network.Error)
    }
    
    static {
      defaultInstance = new Error(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.richardpianka.Chess.Network.Error)
  }
  
  public interface HandshakeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 VersionMajor = 1;
    boolean hasVersionMajor();
    int getVersionMajor();
    
    // required int32 VersionMinor = 2;
    boolean hasVersionMinor();
    int getVersionMinor();
    
    // required int32 VersionRevision = 3;
    boolean hasVersionRevision();
    int getVersionRevision();
  }
  public static final class Handshake extends
      com.google.protobuf.GeneratedMessage
      implements HandshakeOrBuilder {
    // Use Handshake.newBuilder() to construct.
    private Handshake(Builder builder) {
      super(builder);
    }
    private Handshake(boolean noInit) {}
    
    private static final Handshake defaultInstance;
    public static Handshake getDefaultInstance() {
      return defaultInstance;
    }
    
    public Handshake getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Handshake_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Handshake_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 VersionMajor = 1;
    public static final int VERSIONMAJOR_FIELD_NUMBER = 1;
    private int versionMajor_;
    public boolean hasVersionMajor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getVersionMajor() {
      return versionMajor_;
    }
    
    // required int32 VersionMinor = 2;
    public static final int VERSIONMINOR_FIELD_NUMBER = 2;
    private int versionMinor_;
    public boolean hasVersionMinor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getVersionMinor() {
      return versionMinor_;
    }
    
    // required int32 VersionRevision = 3;
    public static final int VERSIONREVISION_FIELD_NUMBER = 3;
    private int versionRevision_;
    public boolean hasVersionRevision() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getVersionRevision() {
      return versionRevision_;
    }
    
    private void initFields() {
      versionMajor_ = 0;
      versionMinor_ = 0;
      versionRevision_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasVersionMajor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersionMinor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersionRevision()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, versionMajor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, versionMinor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, versionRevision_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, versionMajor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, versionMinor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, versionRevision_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Packets.Handshake parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.richardpianka.Chess.Network.Packets.Handshake prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.richardpianka.Chess.Network.Packets.HandshakeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Handshake_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.richardpianka.Chess.Network.Packets.internal_static_com_richardpianka_Chess_Network_Handshake_fieldAccessorTable;
      }
      
      // Construct using com.richardpianka.Chess.Network.Packets.Handshake.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        versionMajor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        versionMinor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        versionRevision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.richardpianka.Chess.Network.Packets.Handshake.getDescriptor();
      }
      
      public com.richardpianka.Chess.Network.Packets.Handshake getDefaultInstanceForType() {
        return com.richardpianka.Chess.Network.Packets.Handshake.getDefaultInstance();
      }
      
      public com.richardpianka.Chess.Network.Packets.Handshake build() {
        com.richardpianka.Chess.Network.Packets.Handshake result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.richardpianka.Chess.Network.Packets.Handshake buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.richardpianka.Chess.Network.Packets.Handshake result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.richardpianka.Chess.Network.Packets.Handshake buildPartial() {
        com.richardpianka.Chess.Network.Packets.Handshake result = new com.richardpianka.Chess.Network.Packets.Handshake(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.versionMajor_ = versionMajor_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.versionMinor_ = versionMinor_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.versionRevision_ = versionRevision_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.richardpianka.Chess.Network.Packets.Handshake) {
          return mergeFrom((com.richardpianka.Chess.Network.Packets.Handshake)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.richardpianka.Chess.Network.Packets.Handshake other) {
        if (other == com.richardpianka.Chess.Network.Packets.Handshake.getDefaultInstance()) return this;
        if (other.hasVersionMajor()) {
          setVersionMajor(other.getVersionMajor());
        }
        if (other.hasVersionMinor()) {
          setVersionMinor(other.getVersionMinor());
        }
        if (other.hasVersionRevision()) {
          setVersionRevision(other.getVersionRevision());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasVersionMajor()) {
          
          return false;
        }
        if (!hasVersionMinor()) {
          
          return false;
        }
        if (!hasVersionRevision()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              versionMajor_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              versionMinor_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              versionRevision_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 VersionMajor = 1;
      private int versionMajor_ ;
      public boolean hasVersionMajor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getVersionMajor() {
        return versionMajor_;
      }
      public Builder setVersionMajor(int value) {
        bitField0_ |= 0x00000001;
        versionMajor_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersionMajor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        versionMajor_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 VersionMinor = 2;
      private int versionMinor_ ;
      public boolean hasVersionMinor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getVersionMinor() {
        return versionMinor_;
      }
      public Builder setVersionMinor(int value) {
        bitField0_ |= 0x00000002;
        versionMinor_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersionMinor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        versionMinor_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 VersionRevision = 3;
      private int versionRevision_ ;
      public boolean hasVersionRevision() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVersionRevision() {
        return versionRevision_;
      }
      public Builder setVersionRevision(int value) {
        bitField0_ |= 0x00000004;
        versionRevision_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersionRevision() {
        bitField0_ = (bitField0_ & ~0x00000004);
        versionRevision_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.richardpianka.Chess.Network.Handshake)
    }
    
    static {
      defaultInstance = new Handshake(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.richardpianka.Chess.Network.Handshake)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_richardpianka_Chess_Network_Success_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_richardpianka_Chess_Network_Success_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_richardpianka_Chess_Network_Error_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_richardpianka_Chess_Network_Error_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_richardpianka_Chess_Network_Handshake_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_richardpianka_Chess_Network_Handshake_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-com/richardpianka/Chess/Network/packet" +
      "s.proto\022\037com.richardpianka.Chess.Network" +
      "\"\032\n\007Success\022\017\n\007Message\030\001 \001(\t\"\030\n\005Error\022\017\n" +
      "\007Message\030\001 \001(\t\"P\n\tHandshake\022\024\n\014VersionMa" +
      "jor\030\001 \002(\005\022\024\n\014VersionMinor\030\002 \002(\005\022\027\n\017Versi" +
      "onRevision\030\003 \002(\005B*\n\037com.richardpianka.Ch" +
      "ess.NetworkB\007Packets"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_richardpianka_Chess_Network_Success_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_richardpianka_Chess_Network_Success_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_richardpianka_Chess_Network_Success_descriptor,
              new java.lang.String[] { "Message", },
              com.richardpianka.Chess.Network.Packets.Success.class,
              com.richardpianka.Chess.Network.Packets.Success.Builder.class);
          internal_static_com_richardpianka_Chess_Network_Error_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_richardpianka_Chess_Network_Error_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_richardpianka_Chess_Network_Error_descriptor,
              new java.lang.String[] { "Message", },
              com.richardpianka.Chess.Network.Packets.Error.class,
              com.richardpianka.Chess.Network.Packets.Error.Builder.class);
          internal_static_com_richardpianka_Chess_Network_Handshake_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_richardpianka_Chess_Network_Handshake_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_richardpianka_Chess_Network_Handshake_descriptor,
              new java.lang.String[] { "VersionMajor", "VersionMinor", "VersionRevision", },
              com.richardpianka.Chess.Network.Packets.Handshake.class,
              com.richardpianka.Chess.Network.Packets.Handshake.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
