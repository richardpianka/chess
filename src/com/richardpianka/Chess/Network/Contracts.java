// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/richardpianka/Chess/Network/contracts.proto

package com.richardpianka.Chess.Network;

public final class Contracts {
  private Contracts() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Result
      implements com.google.protobuf.ProtocolMessageEnum {
    Success(0, 0),
    Failure(1, 1),
    ;
    
    public static final int Success_VALUE = 0;
    public static final int Failure_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static Result valueOf(int value) {
      switch (value) {
        case 0: return Success;
        case 1: return Failure;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Result>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Result>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Result>() {
            public Result findValueByNumber(int number) {
              return Result.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.richardpianka.Chess.Network.Contracts.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Result[] VALUES = {
      Success, Failure, 
    };
    
    public static Result valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Result(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:com.richardpianka.Chess.Network.Result)
  }
  
  public interface EnvelopeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.richardpianka.Chess.Network.HandshakeRequest HandshakeRequest = 1;
    boolean hasHandshakeRequest();
    com.richardpianka.Chess.Network.Contracts.HandshakeRequest getHandshakeRequest();
    com.richardpianka.Chess.Network.Contracts.HandshakeRequestOrBuilder getHandshakeRequestOrBuilder();
    
    // optional .com.richardpianka.Chess.Network.HandshakeResponse HandshakeResponse = 2;
    boolean hasHandshakeResponse();
    com.richardpianka.Chess.Network.Contracts.HandshakeResponse getHandshakeResponse();
    com.richardpianka.Chess.Network.Contracts.HandshakeResponseOrBuilder getHandshakeResponseOrBuilder();
  }
  public static final class Envelope extends
      com.google.protobuf.GeneratedMessage
      implements EnvelopeOrBuilder {
    // Use Envelope.newBuilder() to construct.
    private Envelope(Builder builder) {
      super(builder);
    }
    private Envelope(boolean noInit) {}
    
    private static final Envelope defaultInstance;
    public static Envelope getDefaultInstance() {
      return defaultInstance;
    }
    
    public Envelope getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_Envelope_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_Envelope_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.richardpianka.Chess.Network.HandshakeRequest HandshakeRequest = 1;
    public static final int HANDSHAKEREQUEST_FIELD_NUMBER = 1;
    private com.richardpianka.Chess.Network.Contracts.HandshakeRequest handshakeRequest_;
    public boolean hasHandshakeRequest() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.richardpianka.Chess.Network.Contracts.HandshakeRequest getHandshakeRequest() {
      return handshakeRequest_;
    }
    public com.richardpianka.Chess.Network.Contracts.HandshakeRequestOrBuilder getHandshakeRequestOrBuilder() {
      return handshakeRequest_;
    }
    
    // optional .com.richardpianka.Chess.Network.HandshakeResponse HandshakeResponse = 2;
    public static final int HANDSHAKERESPONSE_FIELD_NUMBER = 2;
    private com.richardpianka.Chess.Network.Contracts.HandshakeResponse handshakeResponse_;
    public boolean hasHandshakeResponse() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.richardpianka.Chess.Network.Contracts.HandshakeResponse getHandshakeResponse() {
      return handshakeResponse_;
    }
    public com.richardpianka.Chess.Network.Contracts.HandshakeResponseOrBuilder getHandshakeResponseOrBuilder() {
      return handshakeResponse_;
    }
    
    private void initFields() {
      handshakeRequest_ = com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDefaultInstance();
      handshakeResponse_ = com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasHandshakeRequest()) {
        if (!getHandshakeRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHandshakeResponse()) {
        if (!getHandshakeResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, handshakeRequest_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, handshakeResponse_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, handshakeRequest_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, handshakeResponse_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.Envelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.richardpianka.Chess.Network.Contracts.Envelope prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.richardpianka.Chess.Network.Contracts.EnvelopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_Envelope_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_Envelope_fieldAccessorTable;
      }
      
      // Construct using com.richardpianka.Chess.Network.Contracts.Envelope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandshakeRequestFieldBuilder();
          getHandshakeResponseFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (handshakeRequestBuilder_ == null) {
          handshakeRequest_ = com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDefaultInstance();
        } else {
          handshakeRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (handshakeResponseBuilder_ == null) {
          handshakeResponse_ = com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDefaultInstance();
        } else {
          handshakeResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.richardpianka.Chess.Network.Contracts.Envelope.getDescriptor();
      }
      
      public com.richardpianka.Chess.Network.Contracts.Envelope getDefaultInstanceForType() {
        return com.richardpianka.Chess.Network.Contracts.Envelope.getDefaultInstance();
      }
      
      public com.richardpianka.Chess.Network.Contracts.Envelope build() {
        com.richardpianka.Chess.Network.Contracts.Envelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.richardpianka.Chess.Network.Contracts.Envelope buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.richardpianka.Chess.Network.Contracts.Envelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.richardpianka.Chess.Network.Contracts.Envelope buildPartial() {
        com.richardpianka.Chess.Network.Contracts.Envelope result = new com.richardpianka.Chess.Network.Contracts.Envelope(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (handshakeRequestBuilder_ == null) {
          result.handshakeRequest_ = handshakeRequest_;
        } else {
          result.handshakeRequest_ = handshakeRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (handshakeResponseBuilder_ == null) {
          result.handshakeResponse_ = handshakeResponse_;
        } else {
          result.handshakeResponse_ = handshakeResponseBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.richardpianka.Chess.Network.Contracts.Envelope) {
          return mergeFrom((com.richardpianka.Chess.Network.Contracts.Envelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.richardpianka.Chess.Network.Contracts.Envelope other) {
        if (other == com.richardpianka.Chess.Network.Contracts.Envelope.getDefaultInstance()) return this;
        if (other.hasHandshakeRequest()) {
          mergeHandshakeRequest(other.getHandshakeRequest());
        }
        if (other.hasHandshakeResponse()) {
          mergeHandshakeResponse(other.getHandshakeResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasHandshakeRequest()) {
          if (!getHandshakeRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasHandshakeResponse()) {
          if (!getHandshakeResponse().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.richardpianka.Chess.Network.Contracts.HandshakeRequest.Builder subBuilder = com.richardpianka.Chess.Network.Contracts.HandshakeRequest.newBuilder();
              if (hasHandshakeRequest()) {
                subBuilder.mergeFrom(getHandshakeRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHandshakeRequest(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.richardpianka.Chess.Network.Contracts.HandshakeResponse.Builder subBuilder = com.richardpianka.Chess.Network.Contracts.HandshakeResponse.newBuilder();
              if (hasHandshakeResponse()) {
                subBuilder.mergeFrom(getHandshakeResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHandshakeResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.richardpianka.Chess.Network.HandshakeRequest HandshakeRequest = 1;
      private com.richardpianka.Chess.Network.Contracts.HandshakeRequest handshakeRequest_ = com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.richardpianka.Chess.Network.Contracts.HandshakeRequest, com.richardpianka.Chess.Network.Contracts.HandshakeRequest.Builder, com.richardpianka.Chess.Network.Contracts.HandshakeRequestOrBuilder> handshakeRequestBuilder_;
      public boolean hasHandshakeRequest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.richardpianka.Chess.Network.Contracts.HandshakeRequest getHandshakeRequest() {
        if (handshakeRequestBuilder_ == null) {
          return handshakeRequest_;
        } else {
          return handshakeRequestBuilder_.getMessage();
        }
      }
      public Builder setHandshakeRequest(com.richardpianka.Chess.Network.Contracts.HandshakeRequest value) {
        if (handshakeRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          handshakeRequest_ = value;
          onChanged();
        } else {
          handshakeRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setHandshakeRequest(
          com.richardpianka.Chess.Network.Contracts.HandshakeRequest.Builder builderForValue) {
        if (handshakeRequestBuilder_ == null) {
          handshakeRequest_ = builderForValue.build();
          onChanged();
        } else {
          handshakeRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeHandshakeRequest(com.richardpianka.Chess.Network.Contracts.HandshakeRequest value) {
        if (handshakeRequestBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              handshakeRequest_ != com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDefaultInstance()) {
            handshakeRequest_ =
              com.richardpianka.Chess.Network.Contracts.HandshakeRequest.newBuilder(handshakeRequest_).mergeFrom(value).buildPartial();
          } else {
            handshakeRequest_ = value;
          }
          onChanged();
        } else {
          handshakeRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearHandshakeRequest() {
        if (handshakeRequestBuilder_ == null) {
          handshakeRequest_ = com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDefaultInstance();
          onChanged();
        } else {
          handshakeRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.richardpianka.Chess.Network.Contracts.HandshakeRequest.Builder getHandshakeRequestBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHandshakeRequestFieldBuilder().getBuilder();
      }
      public com.richardpianka.Chess.Network.Contracts.HandshakeRequestOrBuilder getHandshakeRequestOrBuilder() {
        if (handshakeRequestBuilder_ != null) {
          return handshakeRequestBuilder_.getMessageOrBuilder();
        } else {
          return handshakeRequest_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.richardpianka.Chess.Network.Contracts.HandshakeRequest, com.richardpianka.Chess.Network.Contracts.HandshakeRequest.Builder, com.richardpianka.Chess.Network.Contracts.HandshakeRequestOrBuilder> 
          getHandshakeRequestFieldBuilder() {
        if (handshakeRequestBuilder_ == null) {
          handshakeRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.richardpianka.Chess.Network.Contracts.HandshakeRequest, com.richardpianka.Chess.Network.Contracts.HandshakeRequest.Builder, com.richardpianka.Chess.Network.Contracts.HandshakeRequestOrBuilder>(
                  handshakeRequest_,
                  getParentForChildren(),
                  isClean());
          handshakeRequest_ = null;
        }
        return handshakeRequestBuilder_;
      }
      
      // optional .com.richardpianka.Chess.Network.HandshakeResponse HandshakeResponse = 2;
      private com.richardpianka.Chess.Network.Contracts.HandshakeResponse handshakeResponse_ = com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.richardpianka.Chess.Network.Contracts.HandshakeResponse, com.richardpianka.Chess.Network.Contracts.HandshakeResponse.Builder, com.richardpianka.Chess.Network.Contracts.HandshakeResponseOrBuilder> handshakeResponseBuilder_;
      public boolean hasHandshakeResponse() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.richardpianka.Chess.Network.Contracts.HandshakeResponse getHandshakeResponse() {
        if (handshakeResponseBuilder_ == null) {
          return handshakeResponse_;
        } else {
          return handshakeResponseBuilder_.getMessage();
        }
      }
      public Builder setHandshakeResponse(com.richardpianka.Chess.Network.Contracts.HandshakeResponse value) {
        if (handshakeResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          handshakeResponse_ = value;
          onChanged();
        } else {
          handshakeResponseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setHandshakeResponse(
          com.richardpianka.Chess.Network.Contracts.HandshakeResponse.Builder builderForValue) {
        if (handshakeResponseBuilder_ == null) {
          handshakeResponse_ = builderForValue.build();
          onChanged();
        } else {
          handshakeResponseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeHandshakeResponse(com.richardpianka.Chess.Network.Contracts.HandshakeResponse value) {
        if (handshakeResponseBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              handshakeResponse_ != com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDefaultInstance()) {
            handshakeResponse_ =
              com.richardpianka.Chess.Network.Contracts.HandshakeResponse.newBuilder(handshakeResponse_).mergeFrom(value).buildPartial();
          } else {
            handshakeResponse_ = value;
          }
          onChanged();
        } else {
          handshakeResponseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearHandshakeResponse() {
        if (handshakeResponseBuilder_ == null) {
          handshakeResponse_ = com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDefaultInstance();
          onChanged();
        } else {
          handshakeResponseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.richardpianka.Chess.Network.Contracts.HandshakeResponse.Builder getHandshakeResponseBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHandshakeResponseFieldBuilder().getBuilder();
      }
      public com.richardpianka.Chess.Network.Contracts.HandshakeResponseOrBuilder getHandshakeResponseOrBuilder() {
        if (handshakeResponseBuilder_ != null) {
          return handshakeResponseBuilder_.getMessageOrBuilder();
        } else {
          return handshakeResponse_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.richardpianka.Chess.Network.Contracts.HandshakeResponse, com.richardpianka.Chess.Network.Contracts.HandshakeResponse.Builder, com.richardpianka.Chess.Network.Contracts.HandshakeResponseOrBuilder> 
          getHandshakeResponseFieldBuilder() {
        if (handshakeResponseBuilder_ == null) {
          handshakeResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.richardpianka.Chess.Network.Contracts.HandshakeResponse, com.richardpianka.Chess.Network.Contracts.HandshakeResponse.Builder, com.richardpianka.Chess.Network.Contracts.HandshakeResponseOrBuilder>(
                  handshakeResponse_,
                  getParentForChildren(),
                  isClean());
          handshakeResponse_ = null;
        }
        return handshakeResponseBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.richardpianka.Chess.Network.Envelope)
    }
    
    static {
      defaultInstance = new Envelope(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.richardpianka.Chess.Network.Envelope)
  }
  
  public interface HandshakeRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 VersionMajor = 1;
    boolean hasVersionMajor();
    int getVersionMajor();
    
    // required int32 VersionMinor = 2;
    boolean hasVersionMinor();
    int getVersionMinor();
    
    // required int32 VersionRevision = 3;
    boolean hasVersionRevision();
    int getVersionRevision();
  }
  public static final class HandshakeRequest extends
      com.google.protobuf.GeneratedMessage
      implements HandshakeRequestOrBuilder {
    // Use HandshakeRequest.newBuilder() to construct.
    private HandshakeRequest(Builder builder) {
      super(builder);
    }
    private HandshakeRequest(boolean noInit) {}
    
    private static final HandshakeRequest defaultInstance;
    public static HandshakeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public HandshakeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeRequest_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 VersionMajor = 1;
    public static final int VERSIONMAJOR_FIELD_NUMBER = 1;
    private int versionMajor_;
    public boolean hasVersionMajor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getVersionMajor() {
      return versionMajor_;
    }
    
    // required int32 VersionMinor = 2;
    public static final int VERSIONMINOR_FIELD_NUMBER = 2;
    private int versionMinor_;
    public boolean hasVersionMinor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getVersionMinor() {
      return versionMinor_;
    }
    
    // required int32 VersionRevision = 3;
    public static final int VERSIONREVISION_FIELD_NUMBER = 3;
    private int versionRevision_;
    public boolean hasVersionRevision() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getVersionRevision() {
      return versionRevision_;
    }
    
    private void initFields() {
      versionMajor_ = 0;
      versionMinor_ = 0;
      versionRevision_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasVersionMajor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersionMinor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersionRevision()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, versionMajor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, versionMinor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, versionRevision_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, versionMajor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, versionMinor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, versionRevision_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.richardpianka.Chess.Network.Contracts.HandshakeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.richardpianka.Chess.Network.Contracts.HandshakeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeRequest_fieldAccessorTable;
      }
      
      // Construct using com.richardpianka.Chess.Network.Contracts.HandshakeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        versionMajor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        versionMinor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        versionRevision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDescriptor();
      }
      
      public com.richardpianka.Chess.Network.Contracts.HandshakeRequest getDefaultInstanceForType() {
        return com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDefaultInstance();
      }
      
      public com.richardpianka.Chess.Network.Contracts.HandshakeRequest build() {
        com.richardpianka.Chess.Network.Contracts.HandshakeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.richardpianka.Chess.Network.Contracts.HandshakeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.richardpianka.Chess.Network.Contracts.HandshakeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.richardpianka.Chess.Network.Contracts.HandshakeRequest buildPartial() {
        com.richardpianka.Chess.Network.Contracts.HandshakeRequest result = new com.richardpianka.Chess.Network.Contracts.HandshakeRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.versionMajor_ = versionMajor_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.versionMinor_ = versionMinor_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.versionRevision_ = versionRevision_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.richardpianka.Chess.Network.Contracts.HandshakeRequest) {
          return mergeFrom((com.richardpianka.Chess.Network.Contracts.HandshakeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.richardpianka.Chess.Network.Contracts.HandshakeRequest other) {
        if (other == com.richardpianka.Chess.Network.Contracts.HandshakeRequest.getDefaultInstance()) return this;
        if (other.hasVersionMajor()) {
          setVersionMajor(other.getVersionMajor());
        }
        if (other.hasVersionMinor()) {
          setVersionMinor(other.getVersionMinor());
        }
        if (other.hasVersionRevision()) {
          setVersionRevision(other.getVersionRevision());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasVersionMajor()) {
          
          return false;
        }
        if (!hasVersionMinor()) {
          
          return false;
        }
        if (!hasVersionRevision()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              versionMajor_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              versionMinor_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              versionRevision_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 VersionMajor = 1;
      private int versionMajor_ ;
      public boolean hasVersionMajor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getVersionMajor() {
        return versionMajor_;
      }
      public Builder setVersionMajor(int value) {
        bitField0_ |= 0x00000001;
        versionMajor_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersionMajor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        versionMajor_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 VersionMinor = 2;
      private int versionMinor_ ;
      public boolean hasVersionMinor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getVersionMinor() {
        return versionMinor_;
      }
      public Builder setVersionMinor(int value) {
        bitField0_ |= 0x00000002;
        versionMinor_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersionMinor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        versionMinor_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 VersionRevision = 3;
      private int versionRevision_ ;
      public boolean hasVersionRevision() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVersionRevision() {
        return versionRevision_;
      }
      public Builder setVersionRevision(int value) {
        bitField0_ |= 0x00000004;
        versionRevision_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersionRevision() {
        bitField0_ = (bitField0_ & ~0x00000004);
        versionRevision_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.richardpianka.Chess.Network.HandshakeRequest)
    }
    
    static {
      defaultInstance = new HandshakeRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.richardpianka.Chess.Network.HandshakeRequest)
  }
  
  public interface HandshakeResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .com.richardpianka.Chess.Network.Result Result = 1;
    boolean hasResult();
    com.richardpianka.Chess.Network.Contracts.Result getResult();
  }
  public static final class HandshakeResponse extends
      com.google.protobuf.GeneratedMessage
      implements HandshakeResponseOrBuilder {
    // Use HandshakeResponse.newBuilder() to construct.
    private HandshakeResponse(Builder builder) {
      super(builder);
    }
    private HandshakeResponse(boolean noInit) {}
    
    private static final HandshakeResponse defaultInstance;
    public static HandshakeResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public HandshakeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeResponse_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .com.richardpianka.Chess.Network.Result Result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private com.richardpianka.Chess.Network.Contracts.Result result_;
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.richardpianka.Chess.Network.Contracts.Result getResult() {
      return result_;
    }
    
    private void initFields() {
      result_ = com.richardpianka.Chess.Network.Contracts.Result.Success;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.richardpianka.Chess.Network.Contracts.HandshakeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.richardpianka.Chess.Network.Contracts.HandshakeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.richardpianka.Chess.Network.Contracts.HandshakeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeResponse_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.richardpianka.Chess.Network.Contracts.internal_static_com_richardpianka_Chess_Network_HandshakeResponse_fieldAccessorTable;
      }
      
      // Construct using com.richardpianka.Chess.Network.Contracts.HandshakeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        result_ = com.richardpianka.Chess.Network.Contracts.Result.Success;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDescriptor();
      }
      
      public com.richardpianka.Chess.Network.Contracts.HandshakeResponse getDefaultInstanceForType() {
        return com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDefaultInstance();
      }
      
      public com.richardpianka.Chess.Network.Contracts.HandshakeResponse build() {
        com.richardpianka.Chess.Network.Contracts.HandshakeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.richardpianka.Chess.Network.Contracts.HandshakeResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.richardpianka.Chess.Network.Contracts.HandshakeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.richardpianka.Chess.Network.Contracts.HandshakeResponse buildPartial() {
        com.richardpianka.Chess.Network.Contracts.HandshakeResponse result = new com.richardpianka.Chess.Network.Contracts.HandshakeResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.richardpianka.Chess.Network.Contracts.HandshakeResponse) {
          return mergeFrom((com.richardpianka.Chess.Network.Contracts.HandshakeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.richardpianka.Chess.Network.Contracts.HandshakeResponse other) {
        if (other == com.richardpianka.Chess.Network.Contracts.HandshakeResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.richardpianka.Chess.Network.Contracts.Result value = com.richardpianka.Chess.Network.Contracts.Result.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .com.richardpianka.Chess.Network.Result Result = 1;
      private com.richardpianka.Chess.Network.Contracts.Result result_ = com.richardpianka.Chess.Network.Contracts.Result.Success;
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.richardpianka.Chess.Network.Contracts.Result getResult() {
        return result_;
      }
      public Builder setResult(com.richardpianka.Chess.Network.Contracts.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = com.richardpianka.Chess.Network.Contracts.Result.Success;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.richardpianka.Chess.Network.HandshakeResponse)
    }
    
    static {
      defaultInstance = new HandshakeResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.richardpianka.Chess.Network.HandshakeResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_richardpianka_Chess_Network_Envelope_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_richardpianka_Chess_Network_Envelope_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_richardpianka_Chess_Network_HandshakeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_richardpianka_Chess_Network_HandshakeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_richardpianka_Chess_Network_HandshakeResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_richardpianka_Chess_Network_HandshakeResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n3src/com/richardpianka/Chess/Network/co" +
      "ntracts.proto\022\037com.richardpianka.Chess.N" +
      "etwork\"\246\001\n\010Envelope\022K\n\020HandshakeRequest\030" +
      "\001 \001(\01321.com.richardpianka.Chess.Network." +
      "HandshakeRequest\022M\n\021HandshakeResponse\030\002 " +
      "\001(\01322.com.richardpianka.Chess.Network.Ha" +
      "ndshakeResponse\"W\n\020HandshakeRequest\022\024\n\014V" +
      "ersionMajor\030\001 \002(\005\022\024\n\014VersionMinor\030\002 \002(\005\022" +
      "\027\n\017VersionRevision\030\003 \002(\005\"L\n\021HandshakeRes" +
      "ponse\0227\n\006Result\030\001 \002(\0162\'.com.richardpiank",
      "a.Chess.Network.Result*\"\n\006Result\022\013\n\007Succ" +
      "ess\020\000\022\013\n\007Failure\020\001B,\n\037com.richardpianka." +
      "Chess.NetworkB\tContracts"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_richardpianka_Chess_Network_Envelope_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_richardpianka_Chess_Network_Envelope_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_richardpianka_Chess_Network_Envelope_descriptor,
              new java.lang.String[] { "HandshakeRequest", "HandshakeResponse", },
              com.richardpianka.Chess.Network.Contracts.Envelope.class,
              com.richardpianka.Chess.Network.Contracts.Envelope.Builder.class);
          internal_static_com_richardpianka_Chess_Network_HandshakeRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_richardpianka_Chess_Network_HandshakeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_richardpianka_Chess_Network_HandshakeRequest_descriptor,
              new java.lang.String[] { "VersionMajor", "VersionMinor", "VersionRevision", },
              com.richardpianka.Chess.Network.Contracts.HandshakeRequest.class,
              com.richardpianka.Chess.Network.Contracts.HandshakeRequest.Builder.class);
          internal_static_com_richardpianka_Chess_Network_HandshakeResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_richardpianka_Chess_Network_HandshakeResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_richardpianka_Chess_Network_HandshakeResponse_descriptor,
              new java.lang.String[] { "Result", },
              com.richardpianka.Chess.Network.Contracts.HandshakeResponse.class,
              com.richardpianka.Chess.Network.Contracts.HandshakeResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
