<?xml version="1.0" encoding="UTF-8"?>
<project name="chess">
    <property name="base.dir" value="." />
    <property name="artifacts.dir" value="${base.dir}/artifacts" />
    <property name="src.dir" value="${base.dir}/src" />
    <property name="lib.dir" value="${base.dir}/lib" />
    <property name="docs.dir" value="${base.dir}/docs" />
    <property name="build.dir" value="${base.dir}/build" />
    <property name="deploy.dir" value="${base.dir}/deploy" />
    <property name="deploy.artifact" value="chess.jar" />
    <property name="deploy.artifact.path" value="${deploy.dir}/${deploy.artifact}" />

    <path id="build.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
            <exclude name="junit-4.10.jar" />
        </fileset>
    </path>

    <target name="all" depends="deploy"/>

    <target name="deploy" depends="docs">
        <mkdir dir="${deploy.dir}" />
        <manifestclasspath property="deploy.classpath" jarfile="${deploy.artifact.path}">
            <classpath refid="build.classpath"/>
        </manifestclasspath>
        <jar destfile="${deploy.artifact.path}" basedir="${build.dir}" >
            <manifest>
                <attribute name="Main-Class" value="com.richardpianka.chess.server.Console"/>
                <attribute name="Class-Path" value="${deploy.classpath}"/>
            </manifest>
        </jar>
        <copyfile src="${artifacts.dir}/run_server.bat" dest="${deploy.dir}/run_server.bat" />
        <replace file="${deploy.dir}/run_server.bat" token="JAR_FILE" value="${deploy.artifact}"/>
    </target>

    <target name="docs" depends="build">
        <mkdir dir="${docs.dir}" />
        <scaladoc srcdir="${src.dir}"
                  destdir="${docs.dir}"
                  deprecation="yes" unchecked="yes"
                  doctitle="chess"
                  classpathref="build.classpath">
            <include name="**/*.java" />
            <include name="**/*.scala" />
        </scaladoc>
    </target>

    <target name="build" depends="init,contracts">
        <mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath">
            <include name="**/*.java" />
        </javac>
        <scalac srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath">
            <include name="**/*.scala" />
        </scalac>
        <exec executable="C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe" failonerror="true">
            <arg value="csharp/Chess.proj" />
        </exec>
    </target>

    <target name="contracts" depends="" description="Generate protobuf contracts">
        <exec executable="tools/protoc.exe" failonerror="true">
            <arg value="--java_out=src" />
            <arg value="--proto_path=." />
            <arg value="protobuf/google/descriptor.proto" />
            <arg value="protobuf/google/csharp_options.proto" />
            <arg value="protobuf/chess/contracts.proto" />
        </exec>
        <exec executable="tools/ProtoGen.exe" failonerror="true">
            <arg value="--proto_path=." />
            <arg value="-output_directory=csharp/Chess.contracts" />
            <arg value="protobuf/google/descriptor.proto" />
            <arg value="protobuf/google/csharp_options.proto" />
            <arg value="protobuf/chess/contracts.proto" />
        </exec>
    </target>

    <target name="init" depends="clean">
        <taskdef resource="scala/tools/ant/antlib.xml">
            <classpath>
                <pathelement location="${lib.dir}/scala-compiler.jar" />
                <pathelement location="${lib.dir}/scala-library.jar" />
            </classpath>
        </taskdef>
    </target>

    <target name="clean">
        <delete dir="${docs.dir}" />
        <delete dir="${build.dir}" />
        <delete dir="${deploy.dir}" />
    </target>
</project>